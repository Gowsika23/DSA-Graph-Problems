import java.util.*;
class Graph{
    ArrayList<ArrayList<Integer>> list=new ArrayList<>();
    Graph(int v){
        for(int i=0;i<v;i++){
            list.add(new ArrayList<Integer>());
        }
    }
    
    public void addEdges(int u,int v){
        list.get(u).add(v);
        list.get(v).add(u);
    }
    
    public void bfs(int start){
        ArrayList<Integer> l=new ArrayList<>();
        Queue<Integer> q=new LinkedList<>();
        boolean[] v=new boolean[list.size()];
        q.add(start);
        v[start]=true;
        
        while(!q.isEmpty()){
            int ver=q.remove();
            l.add(ver);
            
            
            for(int i=0;i<list.get(ver).size();i++){
                int av=list.get(ver).get(i);
                if(!v[av]){
                    q.add(av);
                    v[av]=true;
                }
            }
        }
        
        System.out.print(l);
    }
}
public class Main{
    public static void main(String[] args){
        Graph g=new Graph(5);
        g.addEdges(0,1);
        g.addEdges(1,2);
        g.addEdges(3,2);
        g.addEdges(2,4);
        g.addEdges(1,3);
        g.bfs(1);         
    }
}
